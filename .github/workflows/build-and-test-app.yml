name: Build and test project with Gradle and Docker

on:
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        Services: [service1]
    steps:
      - uses: actions/checkout@v3
      - name: Build Service ${{ matrix.Services }}
        uses: ./.github/actions/build-service
        with: 
          name: ${{ matrix.Services }}

  test-services:
    runs-on: ubuntu-latest
    needs: build-services
    strategy:
      matrix:
        Services: [service1]
    steps:
      - uses: actions/checkout@v3
      - name: Build Service ${{ matrix.Services }}
        uses: ./.github/actions/test-service
        with: 
          name: ${{ matrix.Services }}

  build-images:
    runs-on: ubuntu-latest
    needs: [ build-services, test-services ]
    steps:
      - uses: actions/checkout@v3
      - name: Load build folder
        uses: actions/download-artifact@v3
        with:
          name: service1-build-folder
          path: service1/build    #todo add pattern matching to download build folders from all services
      - run: docker compose build
      - run: docker compose up -d

  # snyk-gradle:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     security-events: write
  #   needs: build-service1

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Get build folder from cache
  #       uses: actions/cache@v3
  #       with:
  #         path: service1/build
  #         key: ${{ runner.os }}-build-${{ hashFiles('**/service1.jar') }}

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/gradle-jdk17@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN_KERDAMON }}
  #       with:
  #         args: service1 --sarif-file-output=snyk.sarif

  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk.sarif