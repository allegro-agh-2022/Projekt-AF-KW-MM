name: Docker and Kotlin CI with Gradle

on:
  push:
    branches: [ "master", "add-github-actions" ]
  pull_request:
    branches: [ "master", "add-github-actions" ]

permissions:
  contents: read

jobs:
  build-service1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ls -R
      - uses: ./.github/actions/build-services

  compose-up:
    runs-on: ubuntu-latest
    needs: build-service1
    steps:
    - uses: actions/checkout@v3

    - name: Get build folder from cache
      uses: actions/cache@v3
      with:
        path: service1/build
        key: ${{ runner.os }}-build-${{ hashFiles('**/service1.jar') }}

    - name: Cache docker layers
      uses: actions/cache@v3
      with:
        path: ~/.cache/docker/
        key: ${{ runner.os }}-docker-${{ hashFiles('**/docker-compose.yml') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - run: docker compose build
    - run: docker compose push

  snyk-gradle:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs: build-service1

    steps:
      - uses: actions/checkout@v3

      - name: Get build folder from cache
        uses: actions/cache@v3
        with:
          path: service1/build
          key: ${{ runner.os }}-build-${{ hashFiles('**/service1.jar') }}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN_KERDAMON }}
        with:
          args: service1 --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif